{"version":3,"file":"index.js","sources":["node_modules/lodash/isObject.js","node_modules/lodash/_freeGlobal.js","node_modules/lodash/_root.js","node_modules/lodash/now.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/isSymbol.js","node_modules/lodash/toNumber.js","node_modules/lodash/debounce.js","node_modules/lodash/throttle.js","monitors.js","serialziers.js","global-sensors.js"],"sourcesContent":["/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n","import throttle from \"lodash/throttle\";\n\nexport default class GlobalSensorMonitor {\n\n  constructor(){\n    this.state = {};\n  }\n\n  initialize(queryPeriod) {\n    if (queryPeriod === undefined || queryPeriod === null) {\n      queryPeriod = 0;\n    }\n\n    this.queryPeriod = queryPeriod;\n    const state = this.state;\n    const throttlify = queryPeriod === 0 ? x => x : this.throttlify.bind(this);\n    const args = { state, queryPeriod, throttlify };\n\n    new BatteryMonitor(args).initialize();\n    new GeolocationMonitor(args).initialize();\n    new DeviceOrientationMonitor(args).initialize();\n    new DeviceMotionMonitor(args).initialize();\n    new DeviceLightMonitor(args).initialize();\n    new DeviceProximityMonitor(args).initialize();\n    new DeviceAmbientLightMonitor(args).initialize();\n    new DeviceNavigatorMonitor(args).initialize();\n\n    return this;\n  }\n\n  throttlify(func) {\n    return throttle(func, this.queryPeriod);\n  }\n}\n\nclass BatteryMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    if (navigator.getBattery) {\n      navigator.getBattery().then(battery => {\n        this.state.battery = battery;\n        battery.addEventListener(\"chargingchange\", () => {\n          this.state.battery = battery;\n        });\n      });\n    }\n  }\n}\n\nclass GeolocationMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(\n        geo => {\n          this.state.geo = geo;\n        },\n        () => undefined,\n        {\n          enableHighAccuracy: true,\n          timeout: this.queryPeriod,\n          maximumAge: 0\n        }\n      );\n    }\n  }\n}\n\nclass DeviceOrientationMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    window.addEventListener(\n      \"deviceorientation\",\n      this.throttlify(deviceorientation => {\n        this.state.deviceorientation = deviceorientation;\n      }),\n      false\n    );\n  }\n}\n\nclass DeviceMotionMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    window.addEventListener(\n      \"devicemotion\",\n      this.throttlify(devicemotion => {\n        this.state.devicemotion = devicemotion;\n      }),\n      false\n    );\n  }\n}\n\nclass DeviceLightMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    window.addEventListener(\n      \"devicelight\",\n      this.throttlify(devicelight => {\n        this.state.devicelight = devicelight;\n      }),\n      false\n    );\n  }\n}\n\nclass DeviceProximityMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    window.addEventListener(\n      \"deviceproximity\",\n      this.throttlify(deviceproximity => {\n        this.state.deviceproximity = deviceproximity;\n      }),\n      false\n    );\n  }\n}\n\nclass DeviceAmbientLightMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    if (\"AmbientLightSensor\" in window) {\n      const sensor = new window.AmbientLightSensor();\n      sensor.onreading = () => {\n        this.state.lightlevel = sensor;\n      };\n      sensor.onerror = event => {\n        console.error(\"No light sensor\", event.error.name, event.error.message);\n      };\n      sensor.start();\n    }\n  }\n}\n\nclass DeviceNavigatorMonitor {\n  constructor(args) {\n    Object.assign(this, args);\n  }\n\n  initialize() {\n    setTimeout(() => {\n      this.state.navigator = navigator;\n    }, this.queryPeriod);\n  }\n}\n","export function serializeState(state) {\n  const serialized = {};\n\n  if (state.battery) {\n    serialized.battery = serializeBatteryManager(state.battery);\n  }\n\n  if (state.geo) {\n    serialized.geo = serializePosition(state.geo);\n  }\n\n  if (state.deviceorientation) {\n    serialized.deviceorientation = serializeDeviceOrientationEvent(\n      state.deviceorientation\n    );\n  }\n\n  if (state.devicemotion) {\n    serialized.devicemotion = serializeDeviceMotionEvent(state.devicemotion);\n  }\n\n  if (state.navigator) {\n    serialized.navigator = serializeNavigator(state.navigator);\n  }\n\n  return serialized;\n}\n\nexport function serializeDeviceMotionEvent({\n  acceleration,\n  accelerationIncludingGravity,\n  interval,\n  rotationRate,\n  timeStamp\n}) {\n  return {\n    acceleration: {\n      x: acceleration.x,\n      y: acceleration.y,\n      z: acceleration.z\n    },\n    accelerationIncludingGravity: {\n      x: accelerationIncludingGravity.x,\n      y: accelerationIncludingGravity.y,\n      z: accelerationIncludingGravity.z\n    },\n    interval,\n    rotationRate: {\n      alpha: rotationRate.alpha,\n      beta: rotationRate.beta,\n      gamma: rotationRate.gamma\n    },\n    timeStamp\n  };\n}\n\nexport function serializeNavigator({\n  appCodeName,\n  appVersion,\n  deviceMemory,\n  hardwareConcurrency,\n  appName,\n  languages,\n  language,\n  platform,\n  product,\n  userAgent,\n  vendor,\n  connection\n}) {\n  return {\n    appCodeName,\n    appVersion,\n    deviceMemory,\n    hardwareConcurrency,\n    appName,\n    languages,\n    language,\n    platform,\n    product,\n    userAgent,\n    vendor,\n    connection: connection\n      ? {\n          downlink: connection.downlink,\n          downlinkMax: connection.downlinkMax,\n          effectiveType: connection.effectiveType,\n          type: connection.type\n        }\n      : null\n  };\n}\n\nexport function serializeBatteryManager({\n  charging,\n  chargingTime,\n  dischargingTime,\n  level\n}) {\n  return { charging, chargingTime, dischargingTime, level };\n}\n\nexport function serializePosition({ coords }) {\n  const {\n    latitude,\n    longitude,\n    altitude,\n    accuracy,\n    speed,\n    altitudeAccuracy,\n    heading\n  } = coords;\n  return {\n    coords: {\n      latitude,\n      longitude,\n      altitude,\n      accuracy,\n      speed,\n      altitudeAccuracy,\n      heading\n    }\n  };\n}\n\nexport function serializeDeviceOrientationEvent({\n  alpha,\n  beta,\n  gamma,\n  absolute,\n  bubbles,\n  timeStamp\n}) {\n  return { alpha, beta, gamma, absolute, bubbles, timeStamp };\n}","import GlobalSensorMonitor from \"./monitors\";\nimport {serializeDeviceOrientationEvent, serializeState} from \"./serialziers\";\nexport class GlobalSensor {\n  constructor(opts) {\n    this.listeners = [];\n    if (opts && opts.queryPeriod) {\n      this.queryPeriod = opts.queryPeriod;\n    }\n\n    const globalSensorMonitor = new GlobalSensorMonitor().initialize(\n      this.queryPeriod\n    );\n\n    setInterval(() => {\n      const state = globalSensorMonitor.state;\n      this.listeners.forEach(listener => listener.call(null, state));\n    }, this.queryPeriod);\n  }\n\n  listen(newListener) {\n    this.listeners.push(newListener);\n  }\n\n  clearListeners() {\n    this.listeners = [];\n  }\n}\n\nexport {serializeState, serializeDeviceOrientationEvent, GlobalSensorMonitor}\n"],"names":["value","type","global","Object","freeSelf","self","freeGlobal","Function","root","Date","now","Symbol","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","isOwn","call","tag","unmasked","e","result","nullTag","undefinedTag","getRawTag","objectToString","symbolTag","isObjectLike","baseGetTag","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isSymbol","isObject","other","valueOf","replace","isBinary","test","slice","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","toNumber","cancel","flush","debounce","GlobalSensorMonitor","state","queryPeriod","throttlify","x","bind","BatteryMonitor","initialize","GeolocationMonitor","DeviceOrientationMonitor","DeviceMotionMonitor","DeviceLightMonitor","DeviceProximityMonitor","DeviceAmbientLightMonitor","DeviceNavigatorMonitor","throttle","assign","navigator","getBattery","then","battery","addEventListener","geolocation","watchPosition","geo","deviceorientation","devicemotion","devicelight","deviceproximity","window","sensor","AmbientLightSensor","onreading","lightlevel","onerror","event","error","name","message","start","serializeDeviceOrientationEvent","alpha","beta","gamma","absolute","bubbles","timeStamp","opts","listeners","globalSensorMonitor","forEach","listener","newListener","push","serialized","charging","chargingTime","dischargingTime","level","serializeBatteryManager","coords","latitude","longitude","altitude","accuracy","speed","altitudeAccuracy","heading","serializePosition","acceleration","accelerationIncludingGravity","interval","rotationRate","y","z","serializeDeviceMotionEvent","appCodeName","appVersion","deviceMemory","hardwareConcurrency","appName","languages","language","platform","product","userAgent","vendor","connection","downlink","downlinkMax","effectiveType","serializeNavigator"],"mappings":"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"}